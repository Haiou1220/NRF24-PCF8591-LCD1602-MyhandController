C51 COMPILER V9.02   MAIN                                                                  04/15/2018 03:37:18 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**********************51单片机学习例程************************
   2          *  平台：Keil U4 + STC89C52
   3          *  名称：测试NRF24L01模块，发射代码，发送的数据为
   4          *                                       5个0x23
   5          *  编写：MCU起航
   6          *  日期：2015-8-17
   7          *   QQ : 2246080671
   8          *  晶振:11.0592MHZ
   9          *        更改记录：未更改
  10          ******************************************************************/
  11          #include <reg52.h>
  12          #include "24l01.h"       //function
  13          #include "reg24l01.h" //commands and registers
  14          #include "uart.h" //UART函数声明
  15          #include "Lcd1602.h"
  16          #include "ADC.h"
  17          /******************************************/
  18          void ConfigTimer0(unsigned int ms); //定时器t0
  19          void delay_ms(unsigned int x);    //延时函数
  20          /******************************************/
  21          bit flag300ms = 1;       //300ms定时标志
  22          unsigned char T0RH = 0;  //T0重载值的高字节
  23          unsigned char T0RL = 0;  //T0重载值的低字节
  24          /********************************************/
  25          uchar  tx_buf[TX_PLOAD_WIDTH] = {0,0,0,0,0};
  26          
  27          /************************************************************************************/
  28          
  29          void main(void)
  30          {
  31   1          unsigned char val;
  32   1          unsigned char str[5];
  33   1              /*****/
  34   1              unsigned char sta,sta1,sta2;
  35   1              delay_ms(1000);
  36   1              init_24l01_io();                //引脚初始化
  37   1              delay_ms(1000);
  38   1              /*****/
  39   1              TX_Mode();
  40   1              UART_INIT();    
  41   1              /*****/
  42   1          EA = 1;            //开总中断
  43   1          ConfigTimer0(10);  //配置T0定时10ms
  44   1          InitLcd1602();     //初始化液晶    
  45   1          LcdShowStr(0, 0, "AIN0  AIN1  AIN3");  //显示通道指示
  46   1              /*****/
  47   1              while(1)
  48   1              {
  49   2                      CE = 0;
  50   2              SPI_Write_Buf(WR_TX_PLOAD, tx_buf, TX_PLOAD_WIDTH); //将数据送入发射缓冲区
  51   2                      CE = 1;
  52   2                      while(IRQ);
  53   2                      sta=SPI_Read(STATUS);
  54   2                      SPI_RW_Reg(FLUSH_TX, 0xff);                                     //清除发射缓冲区
  55   2                      SPI_RW_Reg(WRITE_REG+STATUS,sta);                       //清除各种中断标志
C51 COMPILER V9.02   MAIN                                                                  04/15/2018 03:37:18 PAGE 2   

  56   2                      delay_ms(1000);
  57   2      
  58   2                      uart_send_byte(sta);
  59   2                      uart_send_byte( sta1      ); //SPI_Read(CONFIG)
  60   2                      uart_send_byte( sta2      ); //SPI_Read(RF_CH )
  61   2                      /***/
  62   2                       if (1)
  63   2              {
  64   3                  flag300ms = 0;
  65   3                  //显示通道0的电压 /*不是电压是0-255*/
  66   3                 tx_buf[0]=sta1 = val= GetADCValue(0);     //获取ADC通道0的转换值
  67   3                  ValueToString(str, val);  //转为字符串格式的电压值
  68   3                  LcdShowStr(0, 1, str);    //显示到液晶上
  69   3      
  70   3                  //显示通道1的电压   /*不是电压是0-255*/
  71   3                 tx_buf[1] = sta2 = val = GetADCValue(1);
  72   3                  ValueToString(str, val);
  73   3                  LcdShowStr(6, 1, str);
  74   3                  //显示通道3的电压
  75   3                 tx_buf[2]= val = GetADCValue(3);
  76   3                  ValueToString(str, val);
  77   3                  LcdShowStr(12, 1, str);
  78   3              }
  79   2                      /***/
  80   2      
  81   2              }
  82   1      }
  83          
  84           /************************************************************************************/
  85           void delay_ms(unsigned int x)
  86          {
  87   1          unsigned int i,j;
  88   1          i=0;
  89   1          for(i=0;i<x;i++)
  90   1          {
  91   2             j=108;
  92   2                 ;
  93   2             while(j--);
  94   2          }
  95   1      }
  96          
  97          /* 配置并启动T0，ms-T0定时时间 */
  98          void ConfigTimer0(unsigned int ms)
  99          {
 100   1          unsigned long tmp;  //临时变量
 101   1          
 102   1          tmp = 11059200 / 12;      //定时器计数频率
 103   1          tmp = (tmp * ms) / 1000;  //计算所需的计数值
 104   1          tmp = 65536 - tmp;        //计算定时器重载值
 105   1          tmp = tmp + 12;           //补偿中断响应延时造成的误差
 106   1          T0RH = (unsigned char)(tmp>>8);  //定时器重载值拆分为高低字节
 107   1          T0RL = (unsigned char)tmp;
 108   1          TMOD &= 0xF0;   //清零T0的控制位
 109   1          TMOD |= 0x01;   //配置T0为模式1
 110   1          TH0 = T0RH;     //加载T0重载值
 111   1          TL0 = T0RL;
 112   1          ET0 = 1;        //使能T0中断
 113   1          TR0 = 1;        //启动T0
 114   1      }
 115          
 116          /* T0中断服务函数，执行300ms定时 */
 117          void InterruptTimer0() interrupt 1
C51 COMPILER V9.02   MAIN                                                                  04/15/2018 03:37:18 PAGE 3   

 118          {
 119   1          static unsigned char tmr300ms = 0;
 120   1          
 121   1          TH0 = T0RH;  //重新加载重载值
 122   1          TL0 = T0RL;
 123   1          tmr300ms++;
 124   1          if (tmr300ms >= 30)  //定时300ms
 125   1          {
 126   2              tmr300ms = 0;
 127   2              flag300ms = 1;
 128   2          }
 129   1      }
 130          
 131          
 132          
 133          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    394    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
